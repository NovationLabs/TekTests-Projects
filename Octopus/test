#!/usr/bin/env python3
import os
import sys
import glob

print("\n========== [TEST 01 - DIRECTORY STRUCTURE] ==========")

project_dirs = glob.glob("B-DOP-400-MAR-4-1-octopus*")
if len(project_dirs) != 1:
    print("Error: Expected exactly one project directory starting with 'B-DOP-400-MAR-4-1-octopus'")
    sys.exit(1)

project_dir = project_dirs[0]
print("Project directory found:", project_dir)

required_structure = {
    "playbook.yml": "file",
    "poll.tar": "file",
    "result.tar": "file",
    "worker.tar": "file",
    "group_vars/all.yml": "file",
    "roles/base/tasks/main.yml": "file",
    "roles/postgresql/files/pg_hba.conf": "file",
    "roles/postgresql/files/schema.sql": "file",
    "roles/postgresql/tasks/main.yml": "file",
    "roles/redis/files/redis.conf": "file",
    "roles/redis/tasks/main.yml": "file",
    "roles/poll/files/poll.service": "file",
    "roles/poll/tasks/main.yml": "file",
    "roles/result/files/result.service": "file",
    "roles/result/tasks/main.yml": "file",
    "roles/worker/files/worker.service": "file",
    "roles/worker/tasks/main.yml": "file",
}

missing = []
for rel_path, typ in required_structure.items():
    full_path = os.path.join(project_dir, rel_path)
    if typ == "file" and not os.path.isfile(full_path):
        missing.append(rel_path)
    elif typ == "dir" and not os.path.isdir(full_path):
        missing.append(rel_path)

if missing:
    print("Missing or incorrect paths:")
    for m in missing:
        print(" -", m)
    print("\nTest : 0/1")
else:
    print("All required files and folders are present.")
    print("\nTest : 1/1")
